@model MyTradeMTG.Models.Account
@{
    ViewBag.Title = "TopUp";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<link href="~/plugins/notification/snackbar/snackbar.min.css" rel="stylesheet" type="text/css" />
@*<link href="~/plugins/flatpickr/flatpickr.css" rel="stylesheet" type="text/css">
    <link href="~/plugins/flatpickr/custom-flatpickr.css" rel="stylesheet" type="text/css">
    <link href="~/plugins/sweetalerts/sweetalert.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/css/components/custom-sweetalert.css" rel="stylesheet" type="text/css" />*@

@using (Html.BeginForm("TopUp", "User", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="content-body">
        <div class="container-fluid">
            <div class="row layout-top-spacing">
                <div class="col-lg-12 col-12 layout-spacing">
                    <div class="card">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                    <h4>Top-Up</h4>
                                    <span class="text-danger" style="color:red;">
                                        @TempData["msg"]
                                    </span>
                                </div>
                            </div>
                        </div>
                        @*<div class="card-body" id="divtop">*@
                        <div class="card-body">
                            <div class="row mb-4">
                                <div class="col-md-12">
                                    <label style="color:red">MTG /USDT Wallet Balance: @ViewBag.WalletBalance</label>

                                    @if (ViewBag.WalletBalance == "0")
                                    {
                                        <a class="btn btn-primary" style="float: right;" href="/Wallet/AddWallet">Add Fund</a>
                                    }
                                    <input type="hidden" id="hdf" value="@ViewBag.Status" />
                                    <input type="hidden" id="hdfReason" value="@ViewBag.Reason" />
                                </div>
                            </div>
                            <div class="row mb-4">

                                @*@if (Model.IsActive == "True")
                {*@
                                @*<div class="col-md-4">
                                    <label for="LoginId">User Id</label>
                                    @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @placeholder = "Login Id", @onchange = "return GetNameDetails();" })
                                    @Html.HiddenFor(m => m.Name)
                                    <label class="pt-2" style="color:#e49d31;" id="lblName">@Session["FullName"]</label>
                                    <input type="hidden" id="Status" name="Status" value="@Model.Status" />
                                </div>*@
                                @*}
                else
                {*@
                                <div class="col-md-4">
                                    <label for="LoginId">User Id</label>
                                    @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @placeholder = "Login Id", @onchange = "return GetNameDetails();", @readonly = "" })
                                    @Html.HiddenFor(m => m.Name)
                                    <label class="pt-2" style="color:#e49d31;" id="lblName">@Session["FullName"]</label>
                                    <input type="hidden" id="Status" name="Status" value="@Model.Status" />
                                </div>
                                @*}*@



                                <div class="col-md-4">
                                    <label for="Package">Package Type<span style="color:red">*</span></label>
                                    @Html.DropDownListFor(m => m.PackageTypeId, new SelectList(ViewBag.ddlPackageType, "Value", "Text"), new { @class = "form-control", @onchange = "return ChangePackagetype();" })
                                </div>
                                <div class="col-md-4">
                                    <input type="hidden" id="amt" />
                                    <input type="hidden" id="pkg" />
                                    <label for="Package">Package <span style="color:red">*</span></label>
                                    @Html.DropDownListFor(m => m.PackageId, new SelectList(ViewBag.ddlProduct, "Value", "Text"), new { @class = "form-control wide", @onchange = "return GetPackageDetails();" })
                                    <span style="color:red;">Basis On  : <span id="BasisOn"></span></span>
                                </div>
                            </div>
                            <div class="row mb-4">
                                <div class="col-md-4">
                                    <label for="ActivationMTGToken">Activation MTG  <span style="color:red">*</span></label>
                                    <input name="ActivationMTGToken" id="ActivationMTGToken" value="" class="form-control" readonly onchange="return GetPackageDetails();">
                                </div>
                                <div class="col-md-4">
                                    <input type="hidden" id="WalletAmount" value="@ViewBag.WalletBalance" />
                                    <label for="Amount">MTG /USDT <span style="color:red">*</span></label>
                                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @placeholder = "MTG /USDT", @onkeypress = "return isNumberKey(event);", @onchange = "return CheckAmount();" })
                                    <span style="color:red;font-size:small;">Min  : <span id="spfrom"></span> </span><span style="color:red;padding-left:50px;font-size:small;"> Max : <span id="spto"></span> </span><span style="color:red;padding-left:50px;font-size:small;"> In Multiple Of : <span id="spmul"></span></span>
                                    <input type="hidden" value="@ViewBag.ToAmount" id="hdfMax" />
                                    <input type="hidden" id="hdfMin" />
                                </div>
                                <div class="col-md-4">
                                    <label for="TotalAmount">Total<span style="color:red">*</span></label>
                                    @*<input name="TotalAmount" id="TotalAmount" value="" readonly class="form-control">*@
                        <input name="TotalAmount" value="" id="TotalAmount"  class="form-control" >  
                                </div>
                            </div>


                            <input type="hidden" id="Countryid" value="@Model.Country" />
                            <div class="col-md-3" id="divusdoller" style="display:none">
                                <div class="example">
                                    <p class="mb-1"> In US Doller<span style="color: red"></span></p>
                                    <label id="InUsDoller" class="pt-3 form-control"></label>
                                </div>
                            </div>
                            <div class="col-md-3" id="dvinrupees" style="display:none">
                                <div class="example">
                                    <p class="mb-1">Total MTG In Rupess<span style="color: red"></span></p>
                                    <label id="result" class="pt-3 form-control"></label>
                                    <input type="hidden" id="IndianValue" name="IndianValue" />
                                    <input type="hidden" id="AmountOfTotal" name="AmountOfTotal"/>
                                </div>
                            </div>

                            @*-----Convert USD TO INR Link Start-------*@
                            <div style="display:none">
                                <label>From:</label>
                                <select id="from">
                                    <option value="USD">USD</option>
                                </select>
                                <label>To:</label>
                                <select id="to">
                                    <option value="INR">INR</option>
                                </select>
                            </div>
                            @*-----Convert USD TO INR Link End-------*@



                            @*<div class="row mb-4">
                <div class="col-md-4">
                    <label for="Amount">
                        Payment Type
                    </label><span style="color: red">*</span>
                    @Html.DropDownListFor(m => m.PaymentType, new SelectList(ViewBag.ddlpaymentType, "Value", "Text"), new { @class = "form-control", @onchange = "getpaymentTypedetails();" })
                </div>
                <div class="col-md-4" id="paymentmode" style="display: none">
                    <label for="Mode">Mode<span style="color:red">*</span></label>
                    @Html.DropDownListFor(m => m.PaymentMode, new SelectList(ViewBag.ddlpaymentmode, "Value", "Text"), new { @class = "form-control", @onchange = "return CheckPayMode();" })
                </div>
            </div>
            <div class="row mb-4" style="display:none" id="divPaymentMode">
                <div class="col-md-3" id="divQr" style="display: none">
                    <label id="lblQr"> Scan QR </label>
                    <img src="~/assets/img/QR.jpeg" height="200" width="200" />
                </div>
                <div class="col-md-3" id="divbankname">
                    <label for="BankName" id="lblbank">Bank Name</label>
                    @Html.TextBoxFor(m => m.BankName, new { @class = "form-control", @placeholder = "Bank Name", })
                </div>
                <div class="col-md-3" id="divbankbranch">
                    <label for="BranchName" id="lbltbranch">Branch Name</label>
                    @Html.TextBoxFor(m => m.BankBranch, new { @class = "form-control", @placeholder = "Branch Name" })
                </div>
                <div class="col-md-3" id="divtransactiono">
                    <label for="TransactionNo" id="lbltno">Transaction No</label>
                    @Html.TextBoxFor(m => m.TransactionNo, new { @class = "form-control", @placeholder = "TransactionNo", })
                </div>
                <div class="col-md-3" id="divtrdate">
                    <label for="TransactionDate" id="lbltdate">TransactionDate</label>
                    @Html.TextBoxFor(m => m.TransactionDate, new { @class = "form-control", @placeholder = "Transaction Date" })
                </div>
            </div>*@
                            <div class="col-md-4">
                                <input class="btn btn-success" name="btn_Pin" id="btn_Pin" type="button" value="Submit" onclick="return ValidateForm();" data-toggle="modal" />
                            </div>
                            @*<div class="row mb-4">
                <div class="col-md-12">
                    <span style="color:red">From Amount : @ViewBag.FromAmount </span><span style="color:red;padding-left:50px"> To Amount : @ViewBag.ToAmount </span><span style="color:red;padding-left:50px"> In Multiple Of : @ViewBag.InMultipleOf</span>
                </div>
            </div>*@

                        </div>
                            </div>
                        </div>
                    </div>
                </div>
        <!-- Modal -->
                                    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="exampleModalLabel">Top-Up</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <p class="modal-text">
                                                        @*Hello
                                                        @if (Session["Gender"] != null)
                                                        {
                                                            if (Session["Gender"].ToString() == "F")
                                                            {

                                                                <span>Hello @Session["FullName"]</span>
                                                            }
                                                            else
                                                            {
                                                                <span>Hello @Session["FullName"]</span>
                                                            }
                                                        }*@
                                                        @*else
                                                        {*@
                                                            <span>Hello @Session["FullName"]</span>
                                                        @*}*@
                                                        , your <label id="lblTPS"></label> package for <label id="lblAmountsssss"></label> MTG is being initiated for <label id="lblLoginId"></label> with ROI <label id="lblROI"></label> % <label id="lblbasisons"></label>
                                                    </p>
                                                </div>
                                                <div class="modal-footer">
                                                    <button class="btn" data-dismiss="modal"><i class="flaticon-cancel-12"></i> Discard</button>
                                                    <button type="submit" class="btn btn-primary">Save</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                }

                                <script src="~/MyTradeMTGWebsite/assets/js/jquery.min.js"></script>
                                <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
                                @*<script src="~/plugins/sweetalerts/sweetalert2.min.js"></script>
                                    <script src="~/plugins/sweetalerts/custom-sweetalert.js"></script>*@
                                <script src="~/plugins/notification/snackbar/snackbar.min.js"></script>
                                <script src="~/assets/js/components/notification/custom-snackbar.js"></script>

                                <script>
                                    //$(document).ready(function () {
                                    //    $("#PaymentType").val('Online');
                                    //});
                                    //$(function () {
                                    //    var $j = jQuery.noConflict();
                                    //    $("#TopUpDate").datepicker({
                                    //        dateFormat: 'dd/mm/yy',
                                    //    });
                                    //    $("#TransactionDate").datepicker({
                                    //        dateFormat: 'dd/mm/yy',
                                    //    });
                                    //});
                                    //function getpaymentTypedetails() {
                                    //    debugger;
                                    //    if ($('#PaymentType').val() == 'Offline') {
                                    //        $("#paymentmode").show();
                                    //    }
                                    //    else if ($('#PaymentType').val() == 'Online') {
                                    //        $("#paymentmode").hide();
                                    //        $("#divPaymentMode").hide();
                                    //        $("#BankName").val('');
                                    //        $("#BankBranch").val('');
                                    //        $("#TransactionNo").val('');
                                    //        $("#TransactionDate").val('');
                                    //    }
                                    //}
                                    function isNumberKey(evt) {
                                        var charCode = (evt.which) ? evt.which : event.keyCode;
                                        if (charCode != 46 && charCode > 31
                                          && (charCode < 48 || charCode > 57))
                                            return false;
                                        return true;
                                    }

                                    function CheckAmount() {
                                        debugger;
                                        var Amount = $("#Amount").val();
                                        var WalletBalance = $("#WalletAmount").val();
                                        //alert($("#hdfMax").val());
                                        if (Amount == "0") {
                                            Snackbar.show({
                                                text: "Amount should not be zero !!",
                                                actionTextColor: '#fff',
                                                backgroundColor: '#e7515a',
                                                pos: 'top-right'
                                            });
                                            $("#Amount").addClass('errortext');
                                            $('#Amount').focus();
                                            $("#Amount").val('');
                                            return false;
                                        }
                                        else {
                                            if (Amount != null && Amount != "" && Amount != "0") {

                                                var inmultipleof = $("#spmul").text();

                                                if (parseInt(Amount) % parseInt(inmultipleof) == 0) {
                                                    if (parseInt(Amount) > parseInt($("#hdfMax").val())) {
                                                        Snackbar.show({
                                                            text: "MTG should not be greater than max MTG",
                                                            actionTextColor: '#fff',
                                                            backgroundColor: '#e7515a',
                                                            pos: 'top-right'
                                                        });
                                                        $("#Amount").addClass('errortext');
                                                        $('#Amount').focus();
                                                        $("#Amount").val('');
                                                        return false;
                                                    }
                                                    else

                                                        if (parseInt(Amount) > parseInt(WalletBalance)) {
                                                            Snackbar.show({
                                                                text: "Insufficient MTG Balance",
                                                                actionTextColor: '#fff',
                                                                backgroundColor: '#e7515a',
                                                                pos: 'top-right'
                                                            });
                                                            $("#Amount").addClass('errortext');
                                                            $('#Amount').focus();
                                                            $("#Amount").val('');
                                                            return false;
                                                        }
                                                        else if (parseInt(Amount) < parseInt($("#hdfMin").val())) {
                                                            Snackbar.show({
                                                                text: "MTG should not be less than min MTG",
                                                                actionTextColor: '#fff',
                                                                backgroundColor: '#e7515a',
                                                                pos: 'top-right'
                                                            });
                                                            $("#Amount").addClass('errortext');
                                                            $('#Amount').focus();
                                                            $("#Amount").val('');
                                                            return false;
                                                        }
                                                        else {
                                                        }
                                                }
                                                else {
                                                    Snackbar.show({
                                                        text: "Invalid MTG, MTG Should be in Multiple as required. ",
                                                        actionTextColor: '#fff',
                                                        backgroundColor: '#e7515a',
                                                        pos: 'top-right'
                                                    });
                                                    $("#Amount").addClass('errortext');
                                                    $('#Amount').focus();
                                                    $("#Amount").val('');
                                                    return false;
                                                }
                                            }
                                            return true;
                                        }
                                    }

                                    function ValidateForm() {
                                        debugger;
                                        jQuery.noConflict();
                                        $('#exampleModal').modal('hide');
                                        $(".errortext").removeClass("errortext");
                                        if ($('#PackageId').val() == '0') {
                                            $("#PackageId").addClass('errortext');
                                            $('#PackageId').focus();
                                            return false;
                                        }
                                        else if ($('#Amount').val() == '') {
                                            $("#Amount").addClass('errortext');
                                            $('#Amount').focus();
                                            return false;
                                        }
                                        else {
                                            SetAmountandPackage();
                                            return true;
                                        }

                                    }
                                    function SetAmountandPackage() {
                                        debugger;
                                        jQuery.noConflict();
                                        var Amount = ($("#Amount").val());
                                        var BasisOn = $("#BasisOn").text();
                                        $('#exampleModal').modal('show');
                                        $("#lblAmount").text($("#TotalAmount").val());
                                        $("#lblLoginId").text($("#LoginId").val());
                                        $("#lblTPS").text($("#PackageId :selected").text());
                                        $("#lblAmountsssss").text(Amount);
                                        $("#lblbasisons").text(BasisOn);
                                    }
                                    //function CheckPayMode() {
                                    //    debugger;
                                    //    if ($('#PaymentMode').val() != '1' && $('#PaymentMode').val() != "10") {
                                    //        $('#lbltno').html('Transaction No.');
                                    //        $('#lbltdate').html('Transaction Date');
                                    //        $('#lblbank').html('Bank Name');
                                    //        $("#divtrdate").show();
                                    //        $("#divPaymentMode").show();
                                    //        $("#divtransactiono").show();
                                    //        $("#divbankname").show();
                                    //        $("#divbankbranch").show();
                                    //        $("#divQr").hide();
                                    //        $("#BankName").attr("placeholder", "Bank Name");
                                    //        $("#TransactionNo").attr("placeholder", "Transaction No.");
                                    //        $("#TransactionDate").attr("placeholder", "Transaction Date");
                                    //    }
                                    //    else if ($('#PaymentMode').val() == "10") {
                                    //        $('#lbltno').html('Transaction Id');
                                    //        $('#lbltdate').html('Transaction Date');
                                    //        $('#lblbank').html('UPI Id');
                                    //        $("#BankName").val('');
                                    //        $("#BankBranch").val('');
                                    //        $("#divtrdate").show();
                                    //        $("#divPaymentMode").show();
                                    //        $("#divtransactiono").show();
                                    //        $("#divbankname").show();
                                    //        $("#divQr").show();
                                    //        $("#divbankbranch").hide();
                                    //        $("#BankName").attr("placeholder", "UPI Id");
                                    //        $("#TransactionNo").attr("placeholder", "Transaction Id");
                                    //        $("#TransactionDate").attr("placeholder", "Transaction Date");
                                    //    }
                                    //    else {
                                    //        $("#divPaymentMode").hide();
                                    //        $("#divtransactiono").hide();
                                    //        $("#divbankname").hide();
                                    //        $("#divbankbranch").hide();
                                    //        $("#divtrdate").hide();
                                    //        $("#divQr").hide();
                                    //    }

                                    //}

                                    function GetNameDetails() {
                                        debugger;
                                        var LoginId = $('#LoginId').val();
                                        $.ajax({
                                            url: '/User/GetNameDetails', type: 'post', dataType: 'json',
                                            data: { 'LoginId': LoginId },
                                            success: function (data) {
                                                if (data.Result == "yes") {
                                                    $("#Fk_UserId").val(data.Fk_UserId);
                                                    $("#Name").val(data.Name);
                                                    $("#lblName").text($("#Name").val());
                                                    $("#LoginId").removeClass('errortext');
                                                    $("#Name").removeClass('errortext');
                                                }
                                                else if (data.Result == "no") {
                                                    alert('Invailid LoginId');
                                                    $("#LoginId").val('');
                                                    $("#Name").val('');
                                                    $("#LoginId").addClass('errortext');
                                                    $("#Name").addClass('errortext');
                                                    $('#LoginId').focus();
                                                }
                                            }
                                        });
                                    }


                                    function GetPackageDetails() {
                                        debugger;
                                        $.ajax({
                                            url: '/User/GetPackageDetails', type: 'post', dataType: 'json',
                                            data: { 'PackageId': $("#PackageId").val() },
                                            success: function (data) {
                                                debugger;
                                                if (data.Result == "yes") {
                                                    $("#Amount").val('');
                                                    $("#spfrom").text(data.FromAmount);
                                                    $("#spto").text(data.ToAmount);
                                                    $("#spmul").text(data.InMultipleOf);
                                                    $("#hdfMax").val(data.ToAmount);
                                                    $("#hdfMin").val(data.FromAmount);
                                                    $("#lblROI").text(data.ROIPercent);
                                                    $("#ActivationMTGToken").val(data.ActivationMTGToken);
                                                    $("#BasisOn").text(data.BasisOn);

                                                    var status = $("#Status").val();

                                                    if (status == "1") {
                                                        $("#ActivationMTGToken").val('0');
                                                    }

                                                }
                                                else {
                                                    $("#PackageId").val('0')
                                                }
                                            }
                                        });
                                    }

                                </script>

                                @if (TempData["msg"] != null)
                                {
                                    <script>
                $(document).ready(function () {
                    swal({
                        text: '@TempData["msg"]',
                        title: 'Success',
                        type: 'success',
                        padding: '2em'
                    })
                });
                                    </script>
                                }
                                @if (TempData["error"] != null)
                                {
                                    <script>
                                        $(document).ready(function () {
                                            Snackbar.show({
                                                text: '@TempData["error"]',
                                                actionTextColor: '#fff',
                                                backgroundColor: '#e7515a',
                                                pos: 'top-right'
                                            });
                                        });
                                    </script>
                                }

                                <script>
                                    $(document).ready(function () {
                                        debugger;
                                        if ($("#hdf").val() == "InActive") {
                                            jQuery.noConflict();
                                            $("#divtop").hide();
                                            swal({
                                                backdrop: true,
                                                allowOutsideClick: false,
                                                title: 'Warning!',
                                                text: '@ViewBag.Reason',
                                                type: 'warning',
                                                showCancelButton: 0,
                                                confirmButtonText: 'OK',
                                            }).then(function (e) {
                                                if (e.value) {
                                                    window.location = '/User/UserDashboard';
                                                }
                                            })

                                            //window.alert("Your KYC is not updated. Please update your KYC first.")
                                            //window.location = '/User/BankDetailsUpdate';
                                        }
                                        else {
                                            //die();
                                            $("#divtop").show();
                                        }
                                    })
                                </script>

                                <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
                                <script>
                                    function ChangePackagetype() {
                                        debugger;
                                        $("#divload").css({ 'display': '' });
                                        var PackageTypeId = $('#PackageTypeId').val();
                                        var LoginId = $('#LoginId').val();
                                        $.ajax({
                                            url: '/User/GetProductList', type: 'post', dataType: 'json',
                                            //GetProductListForTopUp
                                            data: { 'PackageTypeId': PackageTypeId, 'LoginId': LoginId },
                                            success: function (data) {
                                                $("#Status").val(data.Status);
                                                $("#divload").css({ 'display': 'none' });
                                                $("#PackageId").html(""); // clear before appending new list
                                                $("#PackageId").empty();
                                                $("#PackageId").append(
                                                      $('<option></option>').val(0).html('Select Package Type'));
                                                $.each(data.ddlProduct, function (index, PackagetypeCount) {
                                                    $("#PackageId").append(
                                                          $('<option></option>').val(PackagetypeCount.Value).html(PackagetypeCount.Text));
                                                });

                                            }

                                        });
                                    }

                                    var input = $('[name="ActivationMTGToken"],[name="Amount"]'),
                                    input1 = $('[name="ActivationMTGToken"]'),
                                    input2 = $('[name="Amount"]'),
                                    input3 = $('[name="TotalAmount"]');

                                    //var TotalAmountssss=  $("#TotalAmountssss").val($("#TotalAmount").val())
                                    input.change(function () {
                                        debugger;
                                        var val1 = (isNaN(parseFloat(input1.val()))) ? 0 : parseFloat(input1.val());
                                        var val2 = (isNaN(parseFloat(input2.val()))) ? 0 : parseFloat(input2.val());
                                        input3.val(val1 + val2);

                                        var TotalAmount = $("#TotalAmount").val();
                                        var AmountOfTotal = $("#AmountOfTotal").val(TotalAmount);
                                        ConvertMony();
                                    });
                                </script>
<script>
    function ConvertMony() {
        debugger;
        if ($("#Countryid").val() == "India") {
            $("#dvinrupees").show();
            $("#divusdoller").hide();
        }
        else {
            $("#divusdoller").show();
            $("#InUsDoller").text($("#AmountOfTotal").val() + "$");
            $("#dvinrupees").hide();
        }
        debugger;

        //const convert = document.getElementById("convert");
        const result = document.getElementById("result");
        const from = document.getElementById("from");
        const to = document.getElementById("to");
        //const amount = document.getElementById("TotalAmountssss");

        const amount = document.getElementById("AmountOfTotal");

        const IndianValue = document.getElementById("IndianValue");
        //var TodaysCurrency = $('#IndianValue').val();
        let fromCurrency = from.value;
        let toCurrency = to.value;
        let amt = amount.value;
        fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`)
        .then(response => {
            return response.json();
        })

        .then(data => {
            debugger;
            let rate = data.rates[toCurrency];
            let total = rate * amt;

            //result.innerHTML = `${amt} ${fromCurrency} = ${total}
            result.innerHTML = `${amt}$  = ${total}

            ${toCurrency}`;
            //IndianValue.innerHTML = total;
            $("#IndianValue").val(total);

        });
    }
</script>