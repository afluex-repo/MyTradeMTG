@model MyTradeMTG.Models.User

@{
    ViewBag.Title = "PayoutRequest";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<link href="~/plugins/flatpickr/flatpickr.css" rel="stylesheet" type="text/css">
<link href="~/plugins/flatpickr/custom-flatpickr.css" rel="stylesheet" type="text/css">
<link href="~/plugins/sweetalerts/sweetalert.css" rel="stylesheet" type="text/css" />
<link href="~/assets/css/components/custom-sweetalert.css" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("PayoutRequest", "User", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
    <div class="content-body">
        <div class="container-fluid">
            <div class="row layout-top-spacing">
                <div class="col-lg-12 col-12 layout-spacing">
                    <div class="card">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-xl-12 col-md-12 col-sm-12 col-12">
                                    <h4>Withdrawal</h4>
                                    <span class="text-danger">
                                        @*@TempData["msg"]*@
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            @*<p style="color:red">Note : 2% Procecing Charges And 5% TDS Charge</p><br />*@
                            <p style="color:red">Note : 10% Processing Charges</p><br />
                            <div class="row">
                                <div class="col-lg-3 col-md-3">
                                    <div class="form-group">
                                        MTG /USDT Balance <span style="color: red">*</span>
                                        @Html.TextBoxFor(m => m.PayoutBalance, new { @class = "form-control", @Readonly = "true" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3">
                                    <div class="form-group">
                                        Login Id <span style="color: red">*</span>
                                        @Html.TextBoxFor(m => m.LoginId, new { @class = "form-control", @Placeholder = "Login Id", @Readonly = "true" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3">
                                    <div class="form-group">
                                        @*MTG /USDT<span style="color: red">*</span>
                                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @Placeholder = "MTG /USDT", @onkeypress = "return isNumberKey(event);", @onchange = "return GetFinalAmount();" })*@


                                        MTG /USDT<span style="color: red">*</span>
                                        @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @Placeholder = "MTG /USDT", @onkeypress = "return isNumberKey(event);", @onchange = "return ConvertMony();", @Value="" })


                                    </div>
                                </div>

                                @*GetFinalAmount();*@
                                @*///////////Start///////////////*@

                                @*<div class="col-xl-3 mb-3">
                                        <div class="example">
                                            <p class="mb-1"> MTG /USDT<span style="color: red">*</span></p>
                                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @Placeholder = "MTG Token/USDT", @onkeypress = "return isNumberOrDecimal(event);", @onchange = "return ConvertMony()" })
                                        </div>
                                    </div>*@


                                <input type="hidden" id="Countryid" value="@Model.Country" />
                                <div class="col-xl-3 mb-3" id="divusdoller" style="display:none">
                                    <div class="example">
                                        <p class="mb-1"> In US Doller<span style="color: red"></span></p>
                                        <label id="InUsDoller" class="pt-3 form-control"></label>
                                    </div>
                                </div>

                                <div class="col-xl-3 mb-3" id="dvinrupees" style="display:none">
                                    <div class="example">
                                        <p class="mb-1"> In Rupess<span style="color: red"></span></p>
                                        <label id="result" class="pt-3 form-control"></label>
                                        <input type="hidden" id="IndianValue" name="IndianValue" />
                                    </div>
                                </div>
                                @*-----Convert USD TO INR Link Start-------*@
                                <div style="display:none">
                                    <label>From:</label>
                                    <select id="from">
                                        <option value="USD">USD</option>
                                    </select>
                                    <label>To:</label>
                                    <select id="to">
                                        <option value="INR">INR</option>
                                    </select>
                                </div>
                                @*-----Convert USD TO INR Link End-------*@
                                @*///////////End///////////////*@


                                <div class="col-lg-3 col-md-3" style="margin-top:25px">
                                    <div class="form-group">
                                        <input class="btn btn-success pull-left" type="submit" value="Withdraw" id="PayoutRequest" name="PayoutRequest" onclick="return Validate()" />
                                        <input type="hidden" id="hdf" value="@Model.Status" />
                                        <input type="hidden" id="hdf1" value="@ViewBag.MenuStatus" />
                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6" style="margin-top:28px">
                                    <div class="form-group">
                                        <h6 style="color:red">Processing Charge:  <label id="perAmt" style="color:red;">0</label></h6>
                                        <input type="hidden" id="percentAmt" name="percentAmt" />
                                        <div style="display:none">
                                            <h6 style="color:red">Transfer Charge In Rupees: <label id="Ind" style="color:red;">0</label></h6>
                                            <input type="hidden" id="IndRupees" name="IndRupees" />
                                        </div>
                                        <h6 style="color:red">Gross MTG:  <label id="lbld" style="color:red;">0</label></h6>

                                        <div style="display:none">
                                            <h6 style="color:green">
                                                @*Gross MTG /USDT to be deducted:*@
                                                Gross MTG In Rupees:
                                                <label id="lblf" style="color:green;">0</label>
                                            </h6>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <table id="html5-extension" class="table table-hover non-hover" data-page-length='20'>
                                    <thead>
                                        <tr>
                                            <th>Sr No.</th>
                                            <th>Date</th>
                                            <th>Narration</th>
                                            <th>Net(MTG)</th>
                                            <th>Processing Charge(MTG)</th>
                                            <th>Gross(MTG)</th>
                                            <th>Net(INR)</th>
                                            <th>Processing Charge(INR)</th>
                                            <th>Gross(INR)</th>
                                            <th>UPI ID</th>
                                            <th>IFSC Code</th>
                                            <th>Account No</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null)
                                        {
                                            if (Model.lstPayoutRequest != null)
                                            {
                                                int i = 1;
                                                foreach (var Item in Model.lstPayoutRequest)
                                                {
                                                    <tr class="text-left">
                                                        <td>@i</td>
                                                        <td>@Item.Date</td>
                                                        <td>@Item.Narration</td>
                                                        <td>@Item.Amount</td>
                                                        <td>@Item.TDSAmount (@Item.ProcessingFee)</td>
                                                        <td>@Item.GrossAmount</td>
                                                        <td>@Item.IndianValue</td>
                                                        <td>@Item.TransferChargeInRupees</td>
                                                        <td>@Item.GrossAmountRs</td>
                                                        <td>@Item.UPIID</td>
                                                        <td>@Item.IFSCCode</td>
                                                        <td>@Item.AccountNo</td>
                                                        <td>@Item.Status</td>


                                                    </tr>
                                                    i++;
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/plugins/flatpickr/flatpickr.js"></script>
<script src="~/plugins/flatpickr/custom-flatpickr.js"></script>
<script src="~/assets/js/libs/jquery-3.1.1.min.js"></script>
@*<script src="~/plugins/sweetalerts/sweetalert2.min.js"></script>
    <script src="~/plugins/sweetalerts/custom-sweetalert.js"></script>*@
<script>

    function ConvertMony() {
        debugger;
        var mtgAmt = (parseFloat($("#Amount").val()) * 0.10);

        var newmtgAmt = parseFloat(mtgAmt).toFixed(2);

        $("#perAmt").text(parseFloat(newmtgAmt));

        if ($("#Countryid").val() == "India") {
            $("#dvinrupees").show();
            $("#divusdoller").hide();
        }
        else {
            $("#divusdoller").show();
            $("#InUsDoller").text($("#Amount").val() + "$");
            $("#dvinrupees").hide();
        }
        debugger;
        //const convert = document.getElementById("convert");
        const result = document.getElementById("result");
        const from = document.getElementById("from");
        const to = document.getElementById("to");
        const amount = document.getElementById("Amount");
        const Rupee = parseFloat($("#Amount").val()) * 0.10;
        const IndianValue = document.getElementById("IndianValue");
        //var TodaysCurrency = $('#IndianValue').val();
        let fromCurrency = from.value;
        let toCurrency = to.value;
        let amt = amount.value;
        fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`)
        .then(response => {
            return response.json();
        })
        .then(data => {
            debugger;
            let rate = data.rates[toCurrency];
            let total = rate * amt;
            let totalRupee = rate * Rupee;
            //result.innerHTML = `${amt} ${fromCurrency} = ${total}
            result.innerHTML = `${amt}$  = ${total}
            ${toCurrency}`;
            //IndianValue.innerHTML = total;
            $("#IndianValue").val(total);
            $("#Ind").text(parseFloat(totalRupee));
            GetFinalAmount();

            var grossAmt = totalRupee + total;
            $("#lblf").text(parseFloat(grossAmt));

        });

    }



    var f3 = flatpickr(document.getElementById('FromDate'),
        {
            // mode: "range"
        });
    var f3 = flatpickr(document.getElementById('ToDate'),
        {
            // mode: "range"
        });

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function Validate() {
        debugger;
        document.getElementById("percentAmt").value = document.getElementById("perAmt").innerHTML;
        document.getElementById("IndRupees").value = document.getElementById("Ind").innerHTML;

        $(".errortext").removeClass("errortext");
        if ($('#Amount').val() == '0') {
            $("#Amount").addClass('errortext');
            $('#Amount').focus();
            return false;
        }
        if ($('#Amount').val() == '') {
            $("#Amount").addClass('errortext');
            $('#Amount').focus();
            return false;
        }
        //if (parseFloat($("#Amount").val()) < 1000) {
        //    alert("Transfer amount should not be less than 1000 Rs.");
        //    $('#Amount').val('');
        //    return false;
        //}
        return true;
    }

    function GetFinalAmount() {
        debugger;
        var mtgAmount = $("Amount").val();
        var IndianValue = $('#IndianValue').val();
        //if (parseFloat($("#Amount").val()) < 1000 || parseFloat($("#Amount").val()) > 49000) {
        //if (parseFloat($("#IndianValue").val()) < 1000 || parseFloat($("#IndianValue").val()) > 49000) {
        //    alert("Amount should be between or equal to  1000 and  49000");
        //    $('#IndianValue').val('');
        //    $("#IndianValue").addClass('errortext');
        //    $('#IndianValue').focus();
        //    return false;
        //}
        //var deductionAmount = parseFloat($("#Amount").val()) * 0.05 + parseFloat($("#Amount").val()) * 0.02;

        //var deductionAmount = parseFloat($("#Amount").val()) * 0.10;

        var deductionAmount = parseFloat($("#IndianValue").val()) * 0.10;

        //if (parseFloat($("#Amount").val()) < 1000) {
        //    alert("Amount should be in multiple of 1000 Rs.");
        //    $('#Amount').val('');
        //    return false;
        //    //deductionAmount = 10;
        //}
        //if (parseFloat(deductionAmount) < 10)
        //{
        //    deductionAmount = 10;
        //}
        //if (parseInt($("#Amount").val()) % 100 != 0) {



        //if (parseInt($("#IndianValue").val()) % 100 != 0) {

        //    alert("Amount should be in multiple of 1000 Rs.");
        //    //$('#Amount').val('');
        //    $('#IndianValue').val('');
        //    return false;
        //}

        var finalAmount = parseFloat($("#IndianValue").val()) + parseFloat(deductionAmount);



        var mtgAmt = parseFloat($("#Amount").val()) * 0.10;
        var newmtgAmt = parseFloat(mtgAmt).toFixed(2);

        $("#perAmt").text(parseFloat(newmtgAmt));

       


        var indrupees = parseFloat($("#IndianValue").val());
        $("#IndAmt").text(parseFloat(indrupees));

        var Amt = parseFloat($("#Amount").val());
        var totchrg = Amt + mtgAmt
        $("#lbld").text(parseFloat(totchrg));

    }



</script>
<script>
    $(document).ready(function () {
        debugger;
        //if ($("#hdf").val() != "Approved") {
        //jQuery.noConflict();
        //swal({
        //    backdrop: true,
        //    allowOutsideClick: false,
        //    title: 'Warning!',
        //    text: 'Your KYC is not updated. Please update your KYC first',
        //    type: 'warning',
        //    showCancelButton: 0,
        //    confirmButtonText: 'OK',
        //}).then(function (e) {
        //    if (e.value) {
        //        window.location = '/User/BankDetailsUpdate';
        //    }
        //})

        //window.alert("Your KYC is not updated. Please update your KYC first.")
        //window.location = '/User/BankDetailsUpdate';
        //}
        //else {

        //}
        if ($("#hdf1").val() == "InActive") {
            @*jQuery.noConflict();
                    swal({
                        backdrop: true,
                        allowOutsideClick: false,
                        title: 'Warning!',
                        text: '@ViewBag.Reason',
                        type: 'warning',
                        showCancelButton: 0,
                        confirmButtonText: 'OK',
                    }).then(function (e) {
                        if (e.value) {
                            window.location = '/User/BankDetailsUpdate';
                        }
                    })*@

            //window.alert("Your KYC is not updated. Please update your KYC first.")
            //window.location = '/User/BankDetailsUpdate';
        }
        else {

        }
    })
</script>


@if (TempData["msg"] != null)
{
    <script>
        $(document).ready(function () {
            debugger;
            jQuery.noConflict();
            swal({
                backdrop: true,
                allowOutsideClick: false,
                title: 'Withdrawal Initiated Successfully.',
                type: 'success',
                showCancelButton: 0,
                confirmButtonText: 'OK',
            })
        })
    </script>
}
@if (TempData["errormessage"] != null)
{
    <script>
        $(document).ready(function () {
            debugger;
            jQuery.noConflict();
            swal({
                backdrop: true,
                allowOutsideClick: false,
                title: '@TempData["errormessage"]',
                type: 'warning',
                showCancelButton: 0,
                confirmButtonText: 'OK',
            })
        })
    </script>
}

